// this content copy from https://www.tutorialspoint.com/design_pattern/design_pattern_overview.htm

all the programs and contents:
-----------------------------
https://www.tutorialspoint.com/design_pattern/
https://www.javatpoint.com/design-patterns-in-java


What is Gang of Four (GOF)?
-----------------------------------
In 1994, four authors Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides published a book titled Design Patterns - Elements of Reusable Object-Oriented Software which initiated the concept of Design Pattern in Software development.

These authors are collectively known as Gang of Four (GOF). According to these authors design patterns are primarily based on the following principles of object orientated design.

    * Program to an interface not an implementation
    * Favor object composition over inheritance

Usage of Design Pattern:
-----------------------
Design Patterns have two main usages in software development.

    Common platform for developers
    ------------------------------
    Design patterns provide a standard terminology and are specific to particular scenario. For example, a singleton design pattern signifies use of single object  so all developers familiar with single design pattern will make use of single object and they can tell each other that program is following a singleton pattern.

    Types of Design Patterns
    ------------------------
    As per the design pattern reference book Design Patterns - Elements of Reusable Object-Oriented Software , there are 23 design patterns which can be classified in three categories: Creational, Structural and Behavioral patterns. We'll also discuss another category of design pattern: J2EE design patterns.

    S.N.	                 Pattern & Description
    ---------------------------------------------------------------------------
    1	    Creational Patterns
            ------------------
            These design patterns provide a way to create objects while hiding the creation logic, rather than instantiating objects directly using new operator. This gives program more flexibility in deciding which objects need to be created for a given  use case.
    ---------------------------------------------------------------------------
    2	    Structural Patterns
            --------------------
            These design patterns concern class and object composition. Concept of inheritance is used to compose interfaces and define ways to compose objects to  obtain new functionalities.
    ---------------------------------------------------------------------------
    3	    Behavioral Patterns
            --------------------
            These design patterns are specifically concerned with communication between objects.
    ---------------------------------------------------------------------------
    4	J2EE Patterns
        -------------
            These design patterns are specifically concerned with the presentation tier. These patterns are identified by Sun Java Center.
    ----------------------------------------------------------------------------